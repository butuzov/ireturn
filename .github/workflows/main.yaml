# Test & Build
name: Test & Build

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

jobs:
  TestingWithGoversionsMatrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        go:
          - "1.18"
          - "1.19"
          - "1.20"
          - "1.21"
          - "1.22"

    steps:

      - uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/cache@v4
        if: ${{ !env.ACT }}
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.golang }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.golang }}-

      - run: make build
      - run: make tests

      - name: Install goveralls
        if: matrix.go == '1.22'
        run: go install github.com/mattn/goveralls@latest

      - name: Coverage - Sending Report to Coveral
        if: matrix.go == '1.22'
        env:
          COVERALLS_TOKEN: ${{ secrets.github_token }}
        run: goveralls -coverprofile=coverage.cov -service=github

  GolangCILinter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: latest
          skip-build-cache: true
          skip-pkg-cache: true
          args: -D deadcode --skip-dirs "^(cmd|testdata)"

